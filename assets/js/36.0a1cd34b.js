(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{452:function(a,t,r){"use strict";r.r(t);var e=r(2),s=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[a._v("#")]),a._v(" 存储引擎")]),a._v(" "),t("h3",{attrs:{id:"myisam-5-5以前默认存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#myisam-5-5以前默认存储引擎"}},[a._v("#")]),a._v(" MyISAM（5.5以前默认存储引擎）")]),a._v(" "),t("p",[a._v("表级锁(table-level locking)，不提供事务支持，不支持外键，不支持数据库异常崩溃后的安全恢复")]),a._v(" "),t("h3",{attrs:{id:"innodb-事务性数据库引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#innodb-事务性数据库引擎"}},[a._v("#")]),a._v(" InnoDB（事务性数据库引擎）")]),a._v(" "),t("p",[a._v("行级锁(row-level locking)（默认）和表级锁，提供事务支持，支持外键")]),a._v(" "),t("h4",{attrs:{id:"二进制日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二进制日志"}},[a._v("#")]),a._v(" 二进制日志")]),a._v(" "),t("p",[a._v("binlog（归档日志）-Server层")]),a._v(" "),t("h6",{attrs:{id:"statement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#statement"}},[a._v("#")]),a._v(" statement")]),a._v(" "),t("h6",{attrs:{id:"row"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#row"}},[a._v("#")]),a._v(" row")]),a._v(" "),t("h6",{attrs:{id:"mix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mix"}},[a._v("#")]),a._v(" mix")]),a._v(" "),t("h4",{attrs:{id:"事务日志-innodb-引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务日志-innodb-引擎"}},[a._v("#")]),a._v(" 事务日志（InnoDB 引擎）")]),a._v(" "),t("p",[a._v("redo log(重做日志)-保证事务的持久性")]),a._v(" "),t("p",[a._v("undo log(回滚日志) -保证事务的原子性")]),a._v(" "),t("p",[a._v("锁机制、MVCC-保证事务的隔离性")]),a._v(" "),t("p",[a._v("MVCC 可以看作是行级锁的一个升级，可以有效减少加锁操作，提高性能")]),a._v(" "),t("h4",{attrs:{id:"锁的算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#锁的算法"}},[a._v("#")]),a._v(" 锁的算法")]),a._v(" "),t("h6",{attrs:{id:"record-lock-记录锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#record-lock-记录锁"}},[a._v("#")]),a._v(" Record lock-记录锁")]),a._v(" "),t("h6",{attrs:{id:"gap-lock-间隙锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gap-lock-间隙锁"}},[a._v("#")]),a._v(" Gap lock-间隙锁")]),a._v(" "),t("h6",{attrs:{id:"next-key-lock-临键锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#next-key-lock-临键锁"}},[a._v("#")]),a._v(" Next-key lock-临键锁")]),a._v(" "),t("h4",{attrs:{id:"内存结构详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存结构详解"}},[a._v("#")]),a._v(" 内存结构详解")]),a._v(" "),t("h5",{attrs:{id:"buffer-pool-lru算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#buffer-pool-lru算法"}},[a._v("#")]),a._v(" Buffer Pool（LRU算法）")]),a._v(" "),t("p",[a._v("MySQL 会先改内存，然后记录 redo log，等有空了再刷磁盘，如果内存里没有数据，就去磁盘 load，以「页」（page）为单位从磁盘读取数据的，Buffer Pool 里的数据也是如此，实际上，Buffer Pool 是a linked list of pages，一个以页为元素的链表")]),a._v(" "),t("h5",{attrs:{id:"写缓冲-change-buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写缓冲-change-buffer"}},[a._v("#")]),a._v(" 写缓冲 Change Buffer")]),a._v(" "),t("p",[a._v("如果 MySQL 发现你要修改的页，不在内存里，就把你要对页的修改，先记到一个叫 Change Buffer 的地方，同时记录 redo log，然后再慢慢把数据 load 到内存，load 过来后，再把 Change Buffer 里记录的修改，应用到内存（Buffer Pool）中")]),a._v(" "),t("p",[a._v("merge：Change Buffer -> Buffer Pool")]),a._v(" "),t("p",[a._v("purge：Buffer Pool -> Disk")]),a._v(" "),t("h5",{attrs:{id:"自适应hash索引-adaptive-hash-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自适应hash索引-adaptive-hash-index"}},[a._v("#")]),a._v(" 自适应hash索引（Adaptive Hash Index）")]),a._v(" "),t("p",[a._v("子会监控对表上各索引页的查询，如果观察到建立hash索引可以提高查询速度，则自动建立hash索引1")]),a._v(" "),t("h5",{attrs:{id:"log-buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-buffer"}},[a._v("#")]),a._v(" Log Buffer")]),a._v(" "),t("p",[a._v("使大型事务可以运行，而无需在事务提交之前将redo日志数据写入磁盘，节省了磁盘I/O")]),a._v(" "),t("h4",{attrs:{id:"磁盘结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#磁盘结构"}},[a._v("#")]),a._v(" 磁盘结构")]),a._v(" "),t("h5",{attrs:{id:"tables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tables"}},[a._v("#")]),a._v(" Tables")]),a._v(" "),t("h5",{attrs:{id:"indexes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#indexes"}},[a._v("#")]),a._v(" Indexes")]),a._v(" "),t("h5",{attrs:{id:"tablespaces"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tablespaces"}},[a._v("#")]),a._v(" Tablespaces")]),a._v(" "),t("h5",{attrs:{id:"doublewrite-buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#doublewrite-buffer"}},[a._v("#")]),a._v(" Doublewrite Buffer")]),a._v(" "),t("p",[a._v("Change Buffer 是提升性能，那么 Doublewrite Buffer 就是保证数据页的可靠性")]),a._v(" "),t("p",[a._v("MySQL 在刷数据到磁盘之前，要先把数据写到另外一个地方，也就是 Doublewrite Buffer，写完后，再开始写磁盘，Doublewrite Buffer 可以理解为是一个备份（recovery），万一真的发生 crash，就可以利用 Doublewrite Buffer 来修复磁盘里的数据")]),a._v(" "),t("h5",{attrs:{id:"redo-log"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redo-log"}},[a._v("#")]),a._v(" Redo Log")]),a._v(" "),t("h5",{attrs:{id:"undo-logs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#undo-logs"}},[a._v("#")]),a._v(" Undo Logs")]),a._v(" "),t("h5",{attrs:{id:"写缓冲-change-buffer-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写缓冲-change-buffer-2"}},[a._v("#")]),a._v(" 写缓冲 Change Buffer")]),a._v(" "),t("h2",{attrs:{id:"日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[a._v("#")]),a._v(" 日志")]),a._v(" "),t("h3",{attrs:{id:"二进制日志-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二进制日志-2"}},[a._v("#")]),a._v(" 二进制日志")]),a._v(" "),t("h3",{attrs:{id:"事务日志-innodb-引擎-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务日志-innodb-引擎-2"}},[a._v("#")]),a._v(" 事务日志（InnoDB 引擎）")]),a._v(" "),t("h2",{attrs:{id:"多机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多机"}},[a._v("#")]),a._v(" 多机")])])}),[],!1,null,null,null);t.default=s.exports}}]);