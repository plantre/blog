(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{438:function(t,a,s){"use strict";s.r(a);var n=s(2),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"cap-base"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cap-base"}},[t._v("#")]),t._v(" CAP&BASE")]),t._v(" "),a("h3",{attrs:{id:"cap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cap"}},[t._v("#")]),t._v(" CAP")]),t._v(" "),a("h6",{attrs:{id:"consistency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consistency"}},[t._v("#")]),t._v(" Consistency")]),t._v(" "),a("p",[t._v("（一致性）")]),t._v(" "),a("p",[t._v("所有节点访问同一份最新的数据副本")]),t._v(" "),a("h6",{attrs:{id:"availability"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#availability"}},[t._v("#")]),t._v(" Availability")]),t._v(" "),a("p",[t._v("（可用性）")]),t._v(" "),a("p",[t._v("非故障的节点在合理的时间内返回合理的响应（不是错误或者超时的响应）")]),t._v(" "),a("h6",{attrs:{id:"partitiontolerance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#partitiontolerance"}},[t._v("#")]),t._v(" PartitionTolerance")]),t._v(" "),a("p",[t._v("（分区容错性）")]),t._v(" "),a("p",[t._v("分布式系统出现网络分区的时候，仍然能够对外提供服务")]),t._v(" "),a("p",[a("strong",[t._v("不是三选二，分布式系统理论上不可能选择 CA 架构，只能选择 CP 或者 AP 架构")])]),t._v(" "),a("h5",{attrs:{id:"cp-强一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cp-强一致性"}},[t._v("#")]),t._v(" CP(强一致性)")]),t._v(" "),a("h6",{attrs:{id:"zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[t._v("#")]),t._v(" Zookeeper")]),t._v(" "),a("p",[t._v("任何时刻对 ZooKeeper 的读请求都能得到一致性的结果")]),t._v(" "),a("h6",{attrs:{id:"hbase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hbase"}},[t._v("#")]),t._v(" HBase")]),t._v(" "),a("h5",{attrs:{id:"ap-可用性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ap-可用性"}},[t._v("#")]),t._v(" AP(可用性)")]),t._v(" "),a("h6",{attrs:{id:"eureka"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eureka"}},[t._v("#")]),t._v(" Eureka")]),t._v(" "),a("p",[t._v("Eureka 不会像 ZooKeeper 那样出现选举过程中或者半数以上的机器不可用的时候服务就是不可用的情况")]),t._v(" "),a("p",[t._v("Eureka 保证即使大部分节点挂掉也不会影响正常提供服务，只要有一个节点是可用的就行了,只不过这个节点上的数据可能并不是最新的")]),t._v(" "),a("h6",{attrs:{id:"cassandra"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cassandra"}},[t._v("#")]),t._v(" Cassandra")]),t._v(" "),a("h5",{attrs:{id:"cp-ap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cp-ap"}},[t._v("#")]),t._v(" CP&AP")]),t._v(" "),a("h6",{attrs:{id:"nacos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nacos"}},[t._v("#")]),t._v(" Nacos")]),t._v(" "),a("h3",{attrs:{id:"base"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base"}},[t._v("#")]),t._v(" BASE")]),t._v(" "),a("h6",{attrs:{id:"basicallyavailable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basicallyavailable"}},[t._v("#")]),t._v(" BasicallyAvailable")]),t._v(" "),a("p",[t._v("（基本可用）")]),t._v(" "),a("p",[t._v("指分布式系统在出现不可预知故障的时候，允许损失部分可用性")]),t._v(" "),a("p",[a("strong",[t._v("响应时间上的损失")])]),t._v(" "),a("p",[t._v("正常情况下，处理用户请求需要 0.5s 返回结果，但是由于系统出现故障，处理用户请求的时间变为 3 s")]),t._v(" "),a("p",[a("strong",[t._v("系统功能上的损失")])]),t._v(" "),a("p",[t._v("由于系统访问量突然剧增，系统的部分非核心功能无法使用")]),t._v(" "),a("h6",{attrs:{id:"soft-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soft-state"}},[t._v("#")]),t._v(" Soft-state")]),t._v(" "),a("p",[t._v("（软状态）")]),t._v(" "),a("p",[t._v("指允许系统中的数据存在中间状态（CAP 理论中的数据不一致）,并认为该中间状态的存在不会影响系统的整体可用性，")]),t._v(" "),a("p",[t._v("允许系统在不同节点的数据副本之间进行数据同步的过程存在延时")]),t._v(" "),a("h6",{attrs:{id:"eventuallyconsistent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventuallyconsistent"}},[t._v("#")]),t._v(" EventuallyConsistent")]),t._v(" "),a("p",[t._v("（最终一致性）")]),t._v(" "),a("p",[t._v("系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态")]),t._v(" "),a("h4",{attrs:{id:"思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思想"}},[t._v("#")]),t._v(" 思想")]),t._v(" "),a("p",[t._v("即使无法做到强一致性，但每个应用都可以根据自身业务特点，采用适当的方式来使系统达到最终一致性")]),t._v(" "),a("p",[t._v("是对 CAP 中 AP 方案的一个补充")]),t._v(" "),a("p",[t._v("没分区，不存在P，保证AC，发生分区，CP或者AP,AP 方案只是在系统发生分区的时候放弃一致性，而不是永远放弃一致性,在分区故障恢复后，系统应该达到最终一致性")]),t._v(" "),a("h2",{attrs:{id:"paxos-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#paxos-算法"}},[t._v("#")]),t._v(" Paxos 算法")]),t._v(" "),a("p",[t._v("一种解决分布式系统一致性的经典算法，被公认的非常难以理解和实现")]),t._v(" "),a("p",[t._v("实现是一致性状态机")]),t._v(" "),a("h2",{attrs:{id:"leader选举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leader选举"}},[t._v("#")]),t._v(" Leader选举")]),t._v(" "),a("h3",{attrs:{id:"raft-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raft-算法"}},[t._v("#")]),t._v(" Raft 算法")]),t._v(" "),a("p",[t._v("共识算法就是保证一个集群的多台机器协同工作，在遇到请求时，数据能够保持一致。")]),t._v(" "),a("p",[a("strong",[t._v("Leader election 领导选举")])]),t._v(" "),a("p",[t._v("领导者，跟随者，候选者")]),t._v(" "),a("p",[a("strong",[t._v("Log replication 日志复制")])]),t._v(" "),a("p",[a("strong",[t._v("Safety 安全性")])]),t._v(" "),a("h4",{attrs:{id:"优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),a("h6",{attrs:{id:"强一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强一致性"}},[t._v("#")]),t._v(" 强一致性")]),t._v(" "),a("p",[t._v("虽然所有节点的数据并非实时一致，但Raft算法保证Leader节点的数据最全，同时所有请求都由Leader处理，所以在客户端角度看是强一致性的")]),t._v(" "),a("h6",{attrs:{id:"高可靠性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高可靠性"}},[t._v("#")]),t._v(" 高可靠性")]),t._v(" "),a("p",[t._v("Raft算法保证了Committed的日志不会被修改")]),t._v(" "),a("h6",{attrs:{id:"高可用性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高可用性"}},[t._v("#")]),t._v(" 高可用性")]),t._v(" "),a("p",[t._v("Leader故障，在选举超时到期后，集群自发选举新Leader")]),t._v(" "),a("p",[t._v("Leader故障时存在重复数据问题，需要业务去重或幂等性保证")]),t._v(" "),a("h6",{attrs:{id:"高性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高性能"}},[t._v("#")]),t._v(" 高性能")]),t._v(" "),a("p",[t._v("必须将数据写到所有节点才能返回客户端成功的算法相比，Raft算法只需要大多数节点成功即可")]),t._v(" "),a("h3",{attrs:{id:"zab协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zab协议"}},[t._v("#")]),t._v(" ZAB协议")]),t._v(" "),a("p",[t._v("（ZooKeeper Atomic Broadcast 原子广播）")]),t._v(" "),a("p",[a("strong",[t._v("为分布式主备系统设计")])]),t._v(" "),a("p",[a("strong",[t._v("为分布式协调服务 ZooKeeper 专门设计的一种支持崩溃恢复的原子广播协议")])]),t._v(" "),a("p",[a("strong",[t._v("在 ZooKeeper 中，主要依赖 ZAB 协议来实现分布式数据一致性")])]),t._v(" "),a("p",[a("strong",[t._v("崩溃恢复")])]),t._v(" "),a("p",[t._v("当 Leader 服务器出现网络中断、崩溃退出与重启等异常情况时，ZAB 协议就会进入恢复模式并选举产生新的 Leader 服务器")]),t._v(" "),a("p",[a("strong",[t._v("消息广播")])]),t._v(" "),a("p",[t._v("集群中已经有过半的 Follower 服务器完成了和 Leader 服务器的状态同步，那么整个服务框架就可以进入消息广播模式了")]),t._v(" "),a("h3",{attrs:{id:"具体到组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体到组件"}},[t._v("#")]),t._v(" 具体到组件")]),t._v(" "),a("h4",{attrs:{id:"etcd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etcd"}},[t._v("#")]),t._v(" etcd")]),t._v(" "),a("p",[t._v("使用Raft算法，比较currentTerm，三个状态Leader、Follower、Candidate")]),t._v(" "),a("h4",{attrs:{id:"redis-的-sentinel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-的-sentinel"}},[t._v("#")]),t._v(" Redis 的 Sentinel")]),t._v(" "),a("p",[t._v("使用 Raft 算法")]),t._v(" "),a("h4",{attrs:{id:"kafka"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kafka"}},[t._v("#")]),t._v(" kafka")]),t._v(" "),a("p",[t._v("通过ZK来实现选举，通过ZK来实现选举")]),t._v(" "),a("h4",{attrs:{id:"zk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zk"}},[t._v("#")]),t._v(" zk")]),t._v(" "),a("p",[t._v("使用ZXID、myid来选举，ZAB协议，Leader、Follower，超过半数，选举（崩溃恢复）和同步数据（消息广播）")]),t._v(" "),a("h2",{attrs:{id:"一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一致性"}},[t._v("#")]),t._v(" 一致性")]),t._v(" "),a("p",[t._v("是指对每个节点一个数据的更新，整个集群都知道更新，并且是一致的")]),t._v(" "),a("h3",{attrs:{id:"强一致性-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强一致性-2"}},[t._v("#")]),t._v(" 强一致性")]),t._v(" "),a("p",[t._v("系统写入了什么，读出来的就是什么")]),t._v(" "),a("h3",{attrs:{id:"弱一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弱一致性"}},[t._v("#")]),t._v(" 弱一致性")]),t._v(" "),a("p",[t._v("不一定可以读取到最新写入的值，也不保证多少时间之后读取到的数据是最新的，只是会尽量保证某个时刻达到数据一致的状态")]),t._v(" "),a("h3",{attrs:{id:"最终一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最终一致性"}},[t._v("#")]),t._v(" 最终一致性")]),t._v(" "),a("p",[t._v("系统会保证在一定时间内达到数据一致的状态")]),t._v(" "),a("h4",{attrs:{id:"实现的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现的方式"}},[t._v("#")]),t._v(" 实现的方式")]),t._v(" "),a("h6",{attrs:{id:"读时修复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读时修复"}},[t._v("#")]),t._v(" 读时修复")]),t._v(" "),a("p",[t._v("在读取数据时，检测数据的不一致，进行修复")]),t._v(" "),a("h6",{attrs:{id:"写时修复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写时修复"}},[t._v("#")]),t._v(" 写时修复")]),t._v(" "),a("p",[t._v("（推荐，对性能消耗比较低）")]),t._v(" "),a("p",[t._v("在写入数据，检测数据的不一致时，进行修复")]),t._v(" "),a("h6",{attrs:{id:"异步修复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步修复"}},[t._v("#")]),t._v(" 异步修复")]),t._v(" "),a("p",[t._v("最常用的方式，通过定时对账检测副本数据的一致性，并修复")]),t._v(" "),a("h2",{attrs:{id:"分布式事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式事务"}},[t._v("#")]),t._v(" 分布式事务")]),t._v(" "),a("h3",{attrs:{id:"强一致性事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强一致性事务"}},[t._v("#")]),t._v(" 强一致性事务")]),t._v(" "),a("p",[t._v("（只能用在数据库层面）")]),t._v(" "),a("h4",{attrs:{id:"_2pc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2pc"}},[t._v("#")]),t._v(" 2PC")]),t._v(" "),a("p",[t._v("（Two-phase commit protocol）")]),t._v(" "),a("h5",{attrs:{id:"准备阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备阶段"}},[t._v("#")]),t._v(" 准备阶段")]),t._v(" "),a("p",[t._v("(投票阶段)")]),t._v(" "),a("p",[t._v("提议的节点称为协调者(coordinator)")]),t._v(" "),a("p",[t._v("参与决议节点称为参与者(participants, 或cohorts)")]),t._v(" "),a("h5",{attrs:{id:"提交阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交阶段"}},[t._v("#")]),t._v(" 提交阶段")]),t._v(" "),a("p",[t._v("(执行阶段)")]),t._v(" "),a("p",[t._v("如果参与者全部同意则提交，只要有一个参与者不同意就中止")]),t._v(" "),a("p",[t._v("对一条数据的修改操作首先写undo日志，记录的数据原来的样子，接下来执行事务修改操作，把数据写到redo日志里面")]),t._v(" "),a("p",[t._v("undo与redo能保证数据的强一致性")]),t._v(" "),a("h5",{attrs:{id:"优点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点-2"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),a("p",[t._v("原理简单，实现方便")]),t._v(" "),a("h5",{attrs:{id:"缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),a("h6",{attrs:{id:"同步阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步阻塞"}},[t._v("#")]),t._v(" 同步阻塞")]),t._v(" "),a("p",[t._v("二阶段提交的过程中，所有的节点都在等待其他节点的响应")]),t._v(" "),a("h6",{attrs:{id:"单点问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单点问题"}},[t._v("#")]),t._v(" 单点问题")]),t._v(" "),a("p",[t._v("如果协调者在提交阶段出现问题，那么整个流程将无法运转")]),t._v(" "),a("h6",{attrs:{id:"数据不一致"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据不一致"}},[t._v("#")]),t._v(" 数据不一致")]),t._v(" "),a("p",[t._v("局部网络异常或协调者在尚未发送完所有 commit请求之前自身发生了崩溃")]),t._v(" "),a("p",[t._v("只有部分参与者收到了commit请求，这将导致严重的数据不一致问题")]),t._v(" "),a("h6",{attrs:{id:"容错性不好"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容错性不好"}},[t._v("#")]),t._v(" 容错性不好")]),t._v(" "),a("p",[t._v("二阶段提交协议没有设计较为完善的容错机制，任意一个节点是失败都会导致整个事务的失败")]),t._v(" "),a("h4",{attrs:{id:"_3pc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3pc"}},[t._v("#")]),t._v(" 3PC")]),t._v(" "),a("p",[t._v("引入超时机制")]),t._v(" "),a("h6",{attrs:{id:"cancommit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cancommit"}},[t._v("#")]),t._v(" canCommit")]),t._v(" "),a("p",[t._v("2pc的准备")]),t._v(" "),a("h6",{attrs:{id:"precommit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#precommit"}},[t._v("#")]),t._v(" PreCommit")]),t._v(" "),a("h6",{attrs:{id:"docommit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docommit"}},[t._v("#")]),t._v(" doCommit")]),t._v(" "),a("p",[t._v("有任何一个参与者向协调者发送了No响应，或者等待超时之后，执行事务的中断")]),t._v(" "),a("h6",{attrs:{id:"与2pc区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与2pc区别"}},[t._v("#")]),t._v(" 与2pc区别")]),t._v(" "),a("p",[t._v("第二阶段才写undo和redo事务日志")]),t._v(" "),a("p",[t._v("第三阶段协调者出现异常或网络超时参与者也会commit")]),t._v(" "),a("h6",{attrs:{id:"优点-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点-3"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),a("p",[t._v("改善同步阻塞")]),t._v(" "),a("p",[t._v("改善单点故障")]),t._v(" "),a("h6",{attrs:{id:"缺点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),a("p",[t._v("同步阻塞")]),t._v(" "),a("p",[t._v("单点故障")]),t._v(" "),a("p",[t._v("数据不一致")]),t._v(" "),a("p",[t._v("容错机制不完善")]),t._v(" "),a("h3",{attrs:{id:"补偿性事务思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补偿性事务思想"}},[t._v("#")]),t._v(" 补偿性事务思想")]),t._v(" "),a("p",[t._v("TCC")]),t._v(" "),a("h3",{attrs:{id:"最终一致性事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最终一致性事务"}},[t._v("#")]),t._v(" 最终一致性事务")]),t._v(" "),a("p",[t._v("本地消息表")]),t._v(" "),a("p",[t._v("消息事务")]),t._v(" "),a("p",[t._v("最大努力通知")]),t._v(" "),a("h2",{attrs:{id:"分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[t._v("#")]),t._v(" 分布式锁")]),t._v(" "),a("p",[t._v("场景：互联网秒杀，抢优惠卷，接口幂等性校验")]),t._v(" "),a("h3",{attrs:{id:"基于数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于数据库"}},[t._v("#")]),t._v(" 基于数据库")]),t._v(" "),a("h3",{attrs:{id:"基于redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于redis"}},[t._v("#")]),t._v(" 基于Redis")]),t._v(" "),a("p",[t._v("SETNX")]),t._v(" "),a("p",[t._v("SET if Not eXists")]),t._v(" "),a("p",[t._v("key 不存在则set成功返回 1，如果这个key已经存在了返回0")]),t._v(" "),a("p",[a("strong",[t._v("SET key value [EX seconds|PX milliseconds] [NX|XX] [KEEPTTL]")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/duduct_stock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deductStock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" lockKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product_001"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIfAbsent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lockKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wangcp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECONDS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代表已经加锁了")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error_code"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从redis 中拿当前库存的值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" stock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" realStock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("realStock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"扣减成功，剩余库存："')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" realStock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"扣减失败，库存不足"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 释放锁")]),t._v("\n        stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lockKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"end"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("p",[t._v("SETEX")]),t._v(" "),a("p",[t._v("SETEX key seconds value")]),t._v(" "),a("p",[t._v("key 已经存在，setex命令将覆写旧值")]),t._v(" "),a("p",[t._v("setex是一个原子性(atomic)操作")]),t._v(" "),a("h4",{attrs:{id:"redlock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redlock"}},[t._v("#")]),t._v(" RedLock")]),t._v(" "),a("p",[t._v("Redis官方提出的一种分布式锁的算法")]),t._v(" "),a("ol",[a("li",[t._v("顺序向n个节点请求加锁")]),t._v(" "),a("li",[t._v("根据一定的超时时间来推断是不是跳过该节点")]),t._v(" "),a("li",[t._v("(n/2+1)节点加锁成功并且花费时间小于锁的有效期")]),t._v(" "),a("li",[t._v("认定加锁成功")])]),t._v(" "),a("h4",{attrs:{id:"redisson分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redisson分布式锁"}},[t._v("#")]),t._v(" Redisson分布式锁")]),t._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('@Bean\npublic RedissonClient redisson(){\n    // 单机模式\n    Config config = new Config();\n    config.useSingleServer().setAddress("redis://192.168.3.170:6379").setDatabase(0);\n    return Redisson.create(config);\n}\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedissonClient")]),t._v(" redisson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringRedisTemplate")]),t._v(" stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 模拟下单减库存的场景\n     * @return\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/duduct_stock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deductStock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" lockKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product_001"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.获取锁对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RLock")]),t._v(" redissonLock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lockKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.加锁")]),t._v("\n            redissonLock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 等价于 setIfAbsent(lockKey,"wangcp",10,TimeUnit.SECONDS);')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从redis 中拿当前库存的值")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" stock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" realStock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("realStock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"扣减成功，剩余库存："')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" realStock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"扣减失败，库存不足"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.释放锁")]),t._v("\n            redissonLock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"end"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://pic3.zhimg.com/v2-9a9281a0be299b4fd960e7d0bbde10aa_b.jpg",alt:"Redisson 分布式锁实现原理图"}})]),t._v(" "),a("h3",{attrs:{id:"基于zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于zookeeper"}},[t._v("#")]),t._v(" 基于Zookeeper")]),t._v(" "),a("h2",{attrs:{id:"分布式id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式id"}},[t._v("#")]),t._v(" 分布式ID")]),t._v(" "),a("h2",{attrs:{id:"高并发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高并发"}},[t._v("#")]),t._v(" 高并发")]),t._v(" "),a("h3",{attrs:{id:"消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息队列"}},[t._v("#")]),t._v(" 消息队列")]),t._v(" "),a("h3",{attrs:{id:"缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),a("h3",{attrs:{id:"读写分离-分库分表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读写分离-分库分表"}},[t._v("#")]),t._v(" 读写分离&分库分表")]),t._v(" "),a("h3",{attrs:{id:"负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),a("h4",{attrs:{id:"算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),a("h6",{attrs:{id:"轮询-round-robin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#轮询-round-robin"}},[t._v("#")]),t._v(" 轮询(Round Robin)")]),t._v(" "),a("h6",{attrs:{id:"随机-random"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#随机-random"}},[t._v("#")]),t._v(" 随机(Random)")]),t._v(" "),a("h6",{attrs:{id:"加权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加权"}},[t._v("#")]),t._v(" 加权")]),t._v(" "),a("h6",{attrs:{id:"最小连接数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小连接数"}},[t._v("#")]),t._v(" 最小连接数")]),t._v(" "),a("h6",{attrs:{id:"hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[t._v("#")]),t._v(" hash")]),t._v(" "),a("h4",{attrs:{id:"一致性hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一致性hash"}},[t._v("#")]),t._v(" 一致性Hash")]),t._v(" "),a("p",[a("strong",[t._v("环形Hash空间")])]),t._v(" "),a("p",[a("strong",[t._v("把数据通过一定的hash算法处理后映射到环上")])]),t._v(" "),a("p",[a("strong",[t._v("将机器通过hash算法映射到环上")])]),t._v(" "),a("p",[a("strong",[t._v("机器的删除与添加")])]),t._v(" "),a("p",[a("strong",[t._v("平衡性")])]),t._v(" "),a("p",[t._v("“虚拟节点”（ virtual node ）是实际节点（机器）在 hash 空间的复制品（ replica ）")]),t._v(" "),a("h4",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),a("h6",{attrs:{id:"轮叫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#轮叫"}},[t._v("#")]),t._v(" 轮叫")]),t._v(" "),a("h6",{attrs:{id:"权重轮叫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权重轮叫"}},[t._v("#")]),t._v(" 权重轮叫")]),t._v(" "),a("h6",{attrs:{id:"最小连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小连接"}},[t._v("#")]),t._v(" 最小连接")]),t._v(" "),a("h6",{attrs:{id:"权重最小连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权重最小连接"}},[t._v("#")]),t._v(" 权重最小连接")]),t._v(" "),a("h4",{attrs:{id:"dubbo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dubbo"}},[t._v("#")]),t._v(" Dubbo")]),t._v(" "),a("p",[t._v("随机")]),t._v(" "),a("p",[t._v("轮询")]),t._v(" "),a("p",[t._v("活跃度")]),t._v(" "),a("p",[t._v("Hash一致性")]),t._v(" "),a("h4",{attrs:{id:"springcloud-feign"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springcloud-feign"}},[t._v("#")]),t._v(" SpringCloud Feign")]),t._v(" "),a("h6",{attrs:{id:"轮询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#轮询"}},[t._v("#")]),t._v(" 轮询")]),t._v(" "),a("h6",{attrs:{id:"随机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#随机"}},[t._v("#")]),t._v(" 随机")]),t._v(" "),a("h6",{attrs:{id:"最小连接-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小连接-2"}},[t._v("#")]),t._v(" 最小连接")]),t._v(" "),a("h6",{attrs:{id:"区域加权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区域加权"}},[t._v("#")]),t._v(" 区域加权")]),t._v(" "),a("h6",{attrs:{id:"重试以及responsetime加权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重试以及responsetime加权"}},[t._v("#")]),t._v(" 重试以及ResponseTime加权")]),t._v(" "),a("h2",{attrs:{id:"高可用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高可用"}},[t._v("#")]),t._v(" 高可用")]),t._v(" "),a("h3",{attrs:{id:"限流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限流"}},[t._v("#")]),t._v(" 限流")]),t._v(" "),a("h3",{attrs:{id:"降级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#降级"}},[t._v("#")]),t._v(" 降级")]),t._v(" "),a("h3",{attrs:{id:"熔断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#熔断"}},[t._v("#")]),t._v(" 熔断")]),t._v(" "),a("h3",{attrs:{id:"集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[t._v("#")]),t._v(" 集群")]),t._v(" "),a("h2",{attrs:{id:"高性能-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高性能-2"}},[t._v("#")]),t._v(" 高性能")])])}),[],!1,null,null,null);a.default=r.exports}}]);